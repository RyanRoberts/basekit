@if $nav-mobile {

  // @include mq($until: $nav-mobile-breakpoint) {

    .rnav {
      .js-has-rnav & {
        // Hide by default. This CSS is the same as the hide utility class.
        clip: rect(0 0 0 0);
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        border: 0;
      }

      .js-has-rnav-active & {
        // Remove clipping.
        clip: auto;
        // Set the animate.css duration speed.
        animation-duration: 0.3s;
        // Fix the position to the viewport so it won't scroll.
        position: fixed!important;
        // Fit it to the viewport dimensions.
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        // Define the z-index via set.layout.scss
        z-index: z(mobile-nav);
        // Override the hide CSS width and height.
        width: 100%;
        min-height: 100%;
        //  Use the set.nav.scss background color
        background: $nav-mobile-background;
      }

      // The main content wrapper whether it's a UL or bock of content.
      &__content {
        // Setup some basic padding, I tend to give the bottom more padding to
        // account for UI in mobile browsers.
        padding: 5% 5% 10%;
        // Fit it within the overlay container.
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        // Make sure the height is definitely 100%.
        height: 100%;
        // Make sure users can scroll if the nav is taller than the container.
        overflow-y: scroll!important;
        // Make sure it has nice smooth scrolling on iOS.
        -webkit-overflow-scrolling: touch!important;
        overflow-scrolling: touch;
      }
    }


    // Style the 'hamburger' button.
    // .rnav-toggle {
    //   // Position at the top, but don't make this 'fixed' just yet.
    //   position: absolute;
    //   @include rem(top, px($margin));
    //   @include rem(right, px($margin));
    //   z-index: z(mobile-nav-toggle);
    //
    //   // Style the button.
    //   @include rem(width, $nav-mobile-hit-area);
    //   @include rem(height, $nav-mobile-hit-area);
    //   background: img-url($nav-mobile-toggle) center center no-repeat;
    //   // Make it a wee bit smaller while retaining hit area.
    //   background-size: 75%;
    //
    //   // Prevent wonkiness in iOS.
    //   -webkit-tap-highlight-color: rgba(0,0,0,0);
    //   -webkit-touch-callout: none;
    //   user-select: none;
    //
    //   // Hide text. Same as hide-text utility class.
    //   display: block;
    //   text-align: left;
    //   text-indent: -9999px;
    //   direction: ltr;
    // }

    @keyframes toggleTop {
      0% {
        top: 0;
      }
      50%, 100% {
        top: 50%;
        transform: translateY(-50%);
      }
      50% {
        transform: rotate(0);
      }
      100% {
        transform: rotate(45deg);
      }
    }
    @keyframes toggleBottom {
      0% {
        bottom: 0;
      }
      50%, 100% {
        bottom: 50%;
        transform: translateY(50%);
      }
      50% {
        transform: rotate(0);
      }
      100% {
        transform: rotate(-45deg);
      }
    }



    .rnav-toggle {
      // Position at the top, but don't make this 'fixed' just yet.
      position: absolute;
      @include rem(top, px($margin));
      @include rem(right, px($margin));
      z-index: z(mobile-nav-toggle);

      // Style the button.
      @include rem(width, $nav-mobile-hit-area);
      @include rem(height, $nav-mobile-hit-area);

      // Prevent wonkiness in iOS.
      -webkit-tap-highlight-color: rgba(0,0,0,0);
      -webkit-touch-callout: none;
      user-select: none;

      &:before,
      &:after {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        @include rem(height, $nav-mobile-hit-area / 5.75);
        width: 100%;
        background-color: black;
        // transition: all $speed-normal ease-in-out;
      }

      &:after {
        top: auto;
        bottom: 0;
      }

      span {
        opacity: 1;
        position: absolute;
        top: 50%;
        left: 0;
        @include rem(height, $nav-mobile-hit-area / 5.75);
        width: 100%;
        transform: translateY(-50%);
        background-color: black;

        // Hide text. Same as hide-text utility class.
        display: block;
        text-align: left;
        text-indent: -9999px;
        direction: ltr;
      }
    }

    .js-has-rnav-active {
      // Prevent site body from scrolling when the nav is open.
      body {
        overflow: hidden;
      }

      // .rnav-toggle {
      //   // Fix the toggler 'hamburger' button in position while the nav is open.
      //   position: fixed;
      //   // Switch out the icon image and tweak the size.
      //   background-image: img-url($nav-mobile-open-toggle);
      //   background-size: 70%;
      // }

      .rnav-toggle {
        // Fix the toggler 'hamburger' button in position while the nav is open.
        position: fixed;

        &:before {
          animation: toggleTop $speed-slow forwards;
        }
        &:after {
          animation: toggleBottom $speed-slow forwards;
        }

        span {
          background-color: transparent;
          transition: background-color $speed-fast;
        }
      }
    }

  // MQ closing bracket
  // }
}