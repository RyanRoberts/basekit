$spacer-name: pad !default;
$spacer-min: 500px !default;
// This can't be a lower number than the above $spacer-min value
$spacer-max: ($max-width * 1px) !default;


.#{$spacer-name} {

  &, &-t {
    padding-top: rem($grid-gutter * 1px) / 2;
  }

  &, &-b {
    padding-bottom: rem($grid-gutter * 1px) / 2;
  }

  &-xs,
  &-xxs {
    &, &-t {
      padding-top: rem(($grid-gutter / 4) * 1px) / 2;
    }

    &, &-b {
      padding-bottom: rem(($grid-gutter / 4) * 1px) / 2;
    }
  }

  &-sm {
    &, &-t {
      padding-top: rem(($grid-gutter / 2) * 1px) / 2;
    }

    &, &-b {
      padding-bottom: rem(($grid-gutter / 2) * 1px) / 2;
    }
  }

  &-lg {
    &, &-t {
      padding-top: rem(($grid-gutter * 2) * 1px) / 2;
    }

    &, &-b {
      padding-bottom: rem(($grid-gutter * 2) * 1px) / 2;
    }
  }

  &-xl {
    &, &-t {
      padding-top: rem(($grid-gutter * 4) * 1px) / 2;
    }

    &, &-b {
      padding-bottom: rem(($grid-gutter * 4) * 1px) / 2;
    }
  }

  @include mq($spacer-min) {
    &, &-t {
      padding-top: between(($grid-gutter * 1px) / 2, ($grid-gutter * 1px), $spacer-min, $spacer-max);
    }

    &, &-b {
      padding-bottom: between(($grid-gutter * 1px) / 2, ($grid-gutter * 1px), $spacer-min, $spacer-max);
    }

    &-xxs {
      &, &-t {
        padding-top: between((($grid-gutter / 6) * 1px) / 2, (($grid-gutter / 4) * 1px), $spacer-min, $spacer-max);
      }

      &, &-b {
        padding-bottom: between((($grid-gutter / 6) * 1px) / 2, (($grid-gutter / 4) * 1px), $spacer-min, $spacer-max);
      }
    }

    &-xs {
      &, &-t {
        padding-top: between((($grid-gutter / 4) * 1px) / 2, (($grid-gutter / 4) * 1px), $spacer-min, $spacer-max);
      }

      &, &-b {
        padding-bottom: between((($grid-gutter / 4) * 1px) / 2, (($grid-gutter / 4) * 1px), $spacer-min, $spacer-max);
      }
    }

    &-sm {
      &, &-t {
        padding-top: between((($grid-gutter / 2) * 1px) / 2, (($grid-gutter / 2) * 1px), $spacer-min, $spacer-max);
      }

      &, &-b {
        padding-bottom: between((($grid-gutter / 2) * 1px) / 2, (($grid-gutter / 2) * 1px), $spacer-min, $spacer-max);
      }
    }

    &-lg {
      &, &-t {
        padding-top: between((($grid-gutter * 2) * 1px) / 2, (($grid-gutter * 2) * 1px), $spacer-min, $spacer-max);
      }

      &, &-b {
        padding-bottom: between((($grid-gutter * 2) * 1px) / 2, (($grid-gutter * 2) * 1px), $spacer-min, $spacer-max);
      }
    }

    &-xl {
      &, &-t {
        padding-top: between((($grid-gutter * 4) * 1px) / 2, (($grid-gutter * 4) * 1px), $spacer-min, $spacer-max);
      }

      &, &-b {
        padding-bottom: between((($grid-gutter * 4) * 1px) / 2, (($grid-gutter * 4) * 1px), $spacer-min, $spacer-max);
      }
    }

    &-0 {
      &, &-t {
        padding-top: 0!important;
      }

      &, &-b {
        padding-bottom: 0!important;
      }
    }
  }

  @include mq($spacer-max) {
    &, &-t {
      padding-top: ($grid-gutter * 1px);
    }

    &, &-b {
      padding-bottom: ($grid-gutter * 1px);
    }

    &-xxs {
      &, &-t {
        padding-top: (($grid-gutter / 6) * 1px);
      }

      &, &-b {
        padding-bottom: (($grid-gutter / 6) * 1px);
      }
    }

    &-xs {
      &, &-t {
        padding-top: (($grid-gutter / 4) * 1px);
      }

      &, &-b {
        padding-bottom: (($grid-gutter / 4) * 1px);
      }
    }

    &-sm {
      &, &-t {
        padding-top: (($grid-gutter / 2) * 1px);
      }

      &, &-b {
        padding-bottom: (($grid-gutter / 2) * 1px);
      }
    }

    &-lg {
      &, &-t {
        padding-top: (($grid-gutter * 2) * 1px);
      }

      &, &-b {
        padding-bottom: (($grid-gutter * 2) * 1px);
      }
    }

    &-xl {
      &, &-t {
        padding-top: (($grid-gutter * 4) * 1px);
      }

      &, &-b {
        padding-bottom: (($grid-gutter * 4) * 1px);
      }
    }
  }

}