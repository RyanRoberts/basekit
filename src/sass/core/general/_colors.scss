// @function color($scheme, $tone: base) {
//   @return map-get(map-get($color-scheme, $scheme), $tone);
// }

.color {
  &-primary { color: $color-primary;}
  // Some conditionals to avoid creating classes if the colours are identical.
  // Sometimes designers like to use black for example, you can't darken that.
  @if $color-primary--light != $color-primary {
    &-primary--light { color: $color-primary--light; }
  }
  @if $color-primary--lighter != $color-primary {
    &-primary--lighter { color: $color-primary--lighter; }
  }
  @if $color-primary--dark != $color-primary {
    &-primary--dark { color: $color-primary--dark; }
  }
  @if $color-primary--darker != $color-primary {
    &-primary--darker { color: $color-primary--darker; }
  }

  @if variable-exists(color-secondary) {
    &-secondary { color: $color-secondary;}

    @if $color-secondary--light != $color-secondary {
      &-secondary--light { color: $color-secondary--light; }
    }
    @if $color-secondary--lighter != $color-secondary {
      &-secondary--lighter { color: $color-secondary--lighter; }
    }
    @if $color-secondary--dark != $color-secondary {
      &-secondary--dark { color: $color-secondary--dark; }
    }
    @if $color-secondary--darker != $color-secondary {
      &-secondary--darker { color: $color-secondary--darker; }
    }
  }

  @if variable-exists(color-tertiary) {
    &-tertiary { color: $color-tertiary;}

    @if $color-tertiary--light != $color-tertiary {
      &-tertiary--light { color: $color-tertiary--light; }
    }
    @if $color-tertiary--lighter != $color-tertiary {
      &-tertiary--lighter { color: $color-tertiary--lighter; }
    }
    @if $color-tertiary--dark != $color-tertiary {
      &-tertiary--dark { color: $color-tertiary--dark; }
    }
    @if $color-tertiary--darker != $color-tertiary {
      &-tertiary--darker { color: $color-tertiary--darker; }
    }
  }

  &-grey { color: $color-grey;}
  &-grey--lighter { color: $color-grey--lighter; }
  &-grey--light { color: $color-grey--light; }
  &-grey--dark { color: $color-grey--dark; }
  &-grey--darker { color: $color-grey--darker; }

  &-white { color: $color-white; }
  &-white--tint { color: $color-white--tint; }

  &-black { color: $color-black; }
  &-black--tint { color: $color-black--tint; }

  &-text { color: $color-text; }

  &-alert { color: $alert--text; }
  &-negative { color: $alert-negative--text; }
  &-positive { color: $alert-positive--text; }
}


.bg {
  &-img {
    background-position: center center;
    background-size: cover;
  }

  &-primary { background-color: $color-primary;}
  // Some conditionals to avoid creating classes if the colours are identical.
  // Sometimes designers like to use black for example, you can't darken that.
  @if $color-primary--light != $color-primary {
    &-primary--light { background-color: $color-primary--light; }
  }
  @if $color-primary--lighter != $color-primary {
    &-primary--lighter { background-color: $color-primary--lighter; }
  }
  @if $color-primary--dark != $color-primary {
    &-primary--dark { background-color: $color-primary--dark; }
  }
  @if $color-primary--darker != $color-primary {
    &-primary--darker { background-color: $color-primary--darker; }
  }

  @if variable-exists(color-secondary) {
    &-secondary { background-color: $color-secondary;}

    @if $color-secondary--light != $color-secondary {
      &-secondary--light { background-color: $color-secondary--light; }
    }
    @if $color-secondary--lighter != $color-secondary {
      &-secondary--lighter { background-color: $color-secondary--lighter; }
    }
    @if $color-secondary--dark != $color-secondary {
      &-secondary--dark { background-color: $color-secondary--dark; }
    }
    @if $color-secondary--darker != $color-secondary {
      &-secondary--darker { background-color: $color-secondary--darker; }
    }
  }

  @if variable-exists(color-tertiary) {
    &-tertiary { background-color: $color-tertiary;}

    @if $color-tertiary--light != $color-tertiary {
      &-tertiary--light { background-color: $color-tertiary--light; }
    }
    @if $color-tertiary--lighter != $color-tertiary {
      &-tertiary--lighter { background-color: $color-tertiary--lighter; }
    }
    @if $color-tertiary--dark != $color-tertiary {
      &-tertiary--dark { background-color: $color-tertiary--dark; }
    }
    @if $color-tertiary--darker != $color-tertiary {
      &-tertiary--darker { background-color: $color-tertiary--darker; }
    }
  }

  &-grey { background-color: $color-grey;}
  &-grey--lighter { background-color: $color-grey--lighter; }
  &-grey--light { background-color: $color-grey--light; }
  &-grey--dark { background-color: $color-grey--dark; }
  &-grey--darker { background-color: $color-grey--darker; }

  &-white { background-color: $color-white; }
  &-white--tint { background-color: $color-white--tint; }

  &-black { background-color: $color-black; }
  &-black--tint { background-color: $color-black--tint; }

  &-text { background-color: $color-text; }

  &-body { background-color: $color-body; }

  &-alert { background-color: $alert; }
  &-negative { background-color: $alert-negative; }
  &-positive { background-color: $alert-positive; }
}

.bdr {
  border-color: currentColor;

  &-primary { border-color: $color-primary;}
  // Some conditionals to avoid creating classes if the colours are identical.
  // Sometimes designers like to use black for example, you can't darken that.
  @if $color-primary--light != $color-primary {
    &-primary--light { border-color: $color-primary--light; }
  }
  @if $color-primary--lighter != $color-primary {
    &-primary--lighter { border-color: $color-primary--lighter; }
  }
  @if $color-primary--dark != $color-primary {
    &-primary--dark { border-color: $color-primary--dark; }
  }
  @if $color-primary--darker != $color-primary {
    &-primary--darker { border-color: $color-primary--darker; }
  }

  @if variable-exists(color-secondary) {
    &-secondary { border-color: $color-secondary;}

    @if $color-secondary--light != $color-secondary {
      &-secondary--light { border-color: $color-secondary--light; }
    }
    @if $color-secondary--lighter != $color-secondary {
      &-secondary--lighter { border-color: $color-secondary--lighter; }
    }
    @if $color-secondary--dark != $color-secondary {
      &-secondary--dark { border-color: $color-secondary--dark; }
    }
    @if $color-secondary--darker != $color-secondary {
      &-secondary--darker { border-color: $color-secondary--darker; }
    }
  }

  @if variable-exists(color-tertiary) {
    &-tertiary { border-color: $color-tertiary;}

    @if $color-tertiary--light != $color-tertiary {
      &-tertiary--light { border-color: $color-tertiary--light; }
    }
    @if $color-tertiary--lighter != $color-tertiary {
      &-tertiary--lighter { border-color: $color-tertiary--lighter; }
    }
    @if $color-tertiary--dark != $color-tertiary {
      &-tertiary--dark { border-color: $color-tertiary--dark; }
    }
    @if $color-tertiary--darker != $color-tertiary {
      &-tertiary--darker { border-color: $color-tertiary--darker; }
    }
  }

  &-grey { border-color: $color-grey;}
  &-grey--lighter { border-color: $color-grey--lighter; }
  &-grey--light { border-color: $color-grey--light; }
  &-grey--dark { border-color: $color-grey--dark; }
  &-grey--darker { border-color: $color-grey--darker; }

  &-white { border-color: $color-white; }
  &-white--tint { border-color: $color-white--tint; }

  &-black { border-color: $color-black; }
  &-black--tint { border-color: $color-black--tint; }

  &-text { border-color: $color-text; }

  &-alert { border-color: $alert--dark; }
  &-negative { border-color: $alert-negative--dark; }
  &-positive { border-color: $alert-positive--dark; }
}