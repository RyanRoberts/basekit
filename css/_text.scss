@function vp($target, $context: $max-width, $dimension: vw) {
  $vw-context: ($context*.01) * 1px;
  @if $dimension == vw {
    @return ($target/$vw-context) * 1vw;
  }
  @else {
    @return ($target/$vw-context) * 1vh;
  }
}

// Text and Font Styles
// —————————————————————————————————————————————————————————————————————————————
//
.font {

  &--bold {
    font-weight: 700;
  }

  &--normal {
    font-weight: 400;
  }

  &--italic {
    font-style: italic;
  }

  &--upper {
    text-transform: uppercase;
  }

  // Instead of adding kerning to xl and xxl let's just utilise a class.
  &--kern {
    font-feature-settings: "kern" 1;
    font-kerning: normal;
  }


  // Small font size doesn't need to be fancy responsive, just a tweak is enough.
  &--s {
    font-size: rem(12px);

    @include mq(lap) {
      font-size: rem(14px);
    }
  }

  &--m {
    // Define the standard non-responsive font size:
    font-size: rem(22px);
    // Now define the same font size but using the vp function:
    font-size: vp(22px);
    // Override the defaults until this break point with a fixed size:
    @include mq($until: lap) {
      font-size: rem(18px);
    }
    // At the max site width, lock the font to its full size so it doesn't grow:
    @include mq($max-width * 0px) {
      font-size: rem(22px);
    }
  }

  &--l {
    font-size: rem(26px);
    font-size: vp(26px);

    @include mq($until: lap) {
      font-size: rem(22px);
    }

    @include mq($max-width * 0px) {
      font-size: rem(26px);
    }
  }

  &--xl {
    font-size: rem(36px);
    font-size: vp(36px);

    @include mq($until: lap) {
      font-size: rem(30px);
    }

    @include mq($max-width * 0px) {
      font-size: rem(36px);
    }
  }

  &--hero {
    font-size: rem(60px);
    font-size: vp(60px);
    line-height: 1.05;

    @include mq($until: hands) {
      font-size: rem(40px);
    }

    @include mq($max-width * 0px) {
      font-size: rem(60px);
    }
  }
}