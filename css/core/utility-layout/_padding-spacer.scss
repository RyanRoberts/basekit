@if $padding-spacer-css {

  .#{$padding-spacer-name} {

    // If percentage spacing is set in the compile options use %, otherwise
    // default to rem sizing
    &,
    &-t {
      padding-top: pct($padding-spacer-size-default, $max-width)!important;
    }

    &,
    &-b {
      padding-bottom: pct($padding-spacer-size-default, $max-width)!important;
    }

    &-s {
      &,
      &-t {
        padding-top: pct($padding-spacer-size-small, $max-width)!important;
      }

      &,
      &-b {
        padding-bottom: pct($padding-spacer-size-small, $max-width)!important;
      }
    }

    &-l {
      &,
      &-t {
        padding-top: pct($padding-spacer-size-large, $max-width)!important;
      }

      &,
      &-b {
        padding-bottom: pct($padding-spacer-size-large, $max-width)!important;
      }
    }

    // Set max dimensions to prevent huge spaces at large screen sizes
    @include mq($until: $padding-spacer-breakpoint) {
      &,
      &-t {
        padding-top: rem($padding-spacer-size-default / 2)!important;
      }

      &,
      &-b {
        padding-bottom: rem($padding-spacer-size-default / 2)!important;
      }

      &-s {
        &,
        &-t {
          padding-top: rem($padding-spacer-size-small / 2)!important;
        }

        &,
        &-b {
          padding-bottom: rem($padding-spacer-size-small / 2)!important;
        }
      }

      &-l {
        &,
        &-t {
          padding-top: rem($padding-spacer-size-large / 2)!important;
        }

        &,
        &-b {
          padding-bottom: rem($padding-spacer-size-large / 2)!important;
        }
      }
    }

    // Set max dimensions to prevent huge spaces at large screen sizes
    @include mq(px($max-width)) {
      &,
      &-t {
        padding-top: rem($padding-spacer-size-default)!important;
      }

      &,
      &-b {
        padding-bottom: rem($padding-spacer-size-default)!important;
      }

      &-s {
        &,
        &-t {
          padding-top: rem($padding-spacer-size-small)!important;
        }

        &,
        &-b {
          padding-bottom: rem($padding-spacer-size-small)!important;
        }
      }

      &-l {
        &,
        &-t {
          padding-top: rem($padding-spacer-size-large)!important;
        }

        &,
        &-b {
          padding-bottom: rem($padding-spacer-size-large)!important;
        }
      }
    }
  }

}