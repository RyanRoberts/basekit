@if $spacer-css {

  .#{$spacer-name} {

    // If percentage spacing is set in the compile options use %, otherwise
    // default to rem sizing
    &,
    &-t {
      padding-top: rem($spacer-size-default / 1.25);
      padding-top: vw($spacer-size-default, $max-width);
    }

    &,
    &-b {
      padding-bottom: rem($spacer-size-default / 1.25);
      padding-bottom: vw($spacer-size-default, $max-width);
    }

    &-s {
      &,
      &-t {
        padding-top: rem($spacer-size-small / 1.5);
        padding-top: vw($spacer-size-small, $max-width);
      }

      &,
      &-b {
        padding-bottom: rem($spacer-size-small / 1.5);
        padding-bottom: vw($spacer-size-small, $max-width);
      }
    }

    &-l {
      &,
      &-t {
        padding-top: rem($spacer-size-large / 1.75);
        padding-top: vw($spacer-size-large, $max-width);
      }

      &,
      &-b {
        padding-bottom: rem($spacer-size-large / 1.75);
        padding-bottom: vw($spacer-size-large, $max-width);
      }
    }

    // Set max dimensions to prevent huge spaces at large screen sizes
    // @include mq($until: $spacer-breakpoint) {
    //   &,
    //   &-t {
    //     padding-top: rem($spacer-size-default / 2);
    //   }
    //
    //   &,
    //   &-b {
    //     padding-bottom: rem($spacer-size-default / 2);
    //   }
    //
    //   &-s {
    //     &,
    //     &-t {
    //       padding-top: rem($spacer-size-small / 2);
    //     }
    //
    //     &,
    //     &-b {
    //       padding-bottom: rem($spacer-size-small / 2);
    //     }
    //   }
    //
    //   &-l {
    //     &,
    //     &-t {
    //       padding-top: rem($spacer-size-large / 2);
    //     }
    //
    //     &,
    //     &-b {
    //       padding-bottom: rem($spacer-size-large / 2);
    //     }
    //   }
    // }

    // Set max dimensions to prevent huge spaces at large screen sizes
    @include mq($max-width * 1px) {
      &,
      &-t {
        padding-top: rem($spacer-size-default);
      }

      &,
      &-b {
        padding-bottom: rem($spacer-size-default);
      }

      &-s {
        &,
        &-t {
          padding-top: rem($spacer-size-small);
        }

        &,
        &-b {
          padding-bottom: rem($spacer-size-small);
        }
      }

      &-l {
        &,
        &-t {
          padding-top: rem($spacer-size-large);
        }

        &,
        &-b {
          padding-bottom: rem($spacer-size-large);
        }
      }
    }
  }

}