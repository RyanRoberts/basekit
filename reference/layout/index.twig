{% extends "_layout.twig" %}

{% set title = "Grid Layout" %}
{% set slug = "layout" %}

{% block content %}

  <div class="w-100 bg-white lighter pad" id="intro">
    <section class="site-container">
      {% include '_partials/_quick-nav.twig' %}

      <h2 data-bk-layout class="font-xxl font-light pad-l-t">{{ title }}</h2>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p class="font-m">Basekit layout system is based on a ”faux grid” idea and built with CSS <em>inline-block</em>. Rather than classes it is applied through the <em>data</em> attribute.</p>

        <p>Once HTML white-space has been removed, inline-block provides the flexibility and robustness that floats cans truggle with. Inline-block items can be vertically aligned and flow more consistently. The data attribute allows greater separation of layout styles from other CSS and classes, it also avoids cramming lots of stuff into the class attribute.</p>
      </div>

        <div data-bk-layout="to:m:p:0 m:5">
          <div class="alert--simple alert--positive bn font-s">
            <h3 class="font-bold font-upper font-n">Layout Guide</h3>

            <p class="margin-b">Until this section is developed further, I've pulled togther a PDF document explaining how the default layout for Basekit works.</p>

            <p ><a href="/dl/basekit-layout.pdf" class="btn-primary arrow-dl">Basekit Layout Guide</a></p>


            <h3 class="font-bold font-upper font-n pad-t">Breakpoints Visualised</h3>

            <p class="margin-b">To help designers better understand which devices sit at which breakpoints here is another download that visualises common devices in each breakpoint. However it's important to keep in mind that these devices are not definitive and it changes regularly. The breakpoints used in Basekit are initial defaults chosen to sit between common screen sizes. It is possible to add additional breakpoints, sometimes named <i>tweakpoints</i> to fine tune layouts.</p>

            <p><a href="/dl/breakpoints-visualised.pdf" class="btn-primary arrow-dl">Breakpoints Visualised</a></p>
          </div>
        </div>

    </section>
  </div>

  <div class="w-100 bg-white--tint  pad" id="grid">
    <section class="site-container">

      <h3 data-bk-layout="p:trl" class="font-l">The Grid</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>By default BaseKit is based on the common twelve column layout, this provides a great flexibility when dividing the grid into columns. However Basekit is not resticted to any number of columns.</p>

        <p>The ”faux grid” idea mentioned above relates to there being one grid across all screen size (there are no ”tiers” as seen in other frameworks). If you want a four column grid at small screen size simply <i>fake</i> it by using three columns for each small screen column.</p>

        <p><strong>You define layout content by defining how many columns it should span:</strong></p>
      </div>

      <ul class="color-white pad-b">
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>
        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>

        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>
        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>
        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>
        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>
        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>
        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>

        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">3</span>
        </li>
        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">3</span>
        </li>
        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">3</span>
        </li>
        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">3</span>
        </li>

        <li data-bk-layout="4">
          <span data-bk-layout class="bg-primary align-c">4</span>
        </li>
        <li data-bk-layout="4">
          <span data-bk-layout class="bg-primary align-c">4</span>
        </li>
        <li data-bk-layout="4">
          <span data-bk-layout class="bg-primary align-c">4</span>
        </li>

        <li data-bk-layout="6">
          <span data-bk-layout class="bg-primary align-c">6</span>
        </li>
        <li data-bk-layout="6">
          <span data-bk-layout class="bg-primary align-c">6</span>
        </li>

        <li data-bk-layout="12">
          <span data-bk-layout class="bg-primary align-c">12</span>
        </li>
      </ul>

      <ul class="color-white pad-t">
        <li data-bk-layout="11">
          <span data-bk-layout class="bg-primary align-c">11</span>
        </li>

        <li data-bk-layout="1">
          <span data-bk-layout class="bg-primary align-c">1</span>
        </li>

        <li data-bk-layout="10">
          <span data-bk-layout class="bg-primary align-c">10</span>
        </li>

        <li data-bk-layout="2">
          <span data-bk-layout class="bg-primary align-c">2</span>
        </li>

        <li data-bk-layout="9">
          <span data-bk-layout class="bg-primary align-c">9</span>
        </li>

        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">3</span>
        </li>

        <li data-bk-layout="8">
          <span data-bk-layout class="bg-primary align-c">8</span>
        </li>

        <li data-bk-layout="4">
          <span data-bk-layout class="bg-primary align-c">4</span>
        </li>

        <li data-bk-layout="7">
          <span data-bk-layout class="bg-primary align-c">7</span>
        </li>

        <li data-bk-layout="5">
          <span data-bk-layout class="bg-primary align-c">5</span>
        </li>
      </ul>
    </section>
  </div>

  <div class="w-100 bg-white pad" id="push-pull">
    <section class="site-container">
      <h3 data-bk-layout="p:trl" class="font-l">Push Right &amp; Left</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>The <code>pr:</code> and <code>pl:</code> values allow you to push blocks towards the right or left.</p>
      </div>

      <ul class="color-white">
        <li data-bk-layout="2 pr:1">
          <span data-bk-layout class="bg-primary align-c">pr:1</span>
        </li>
        <li data-bk-layout="3">
          <span data-bk-layout class="bg-primary align-c">No push</span>
        </li>
        <li data-bk-layout="4 pr:2">
          <span data-bk-layout class="bg-primary align-c">pr:2</span>
        </li>
        <li data-bk-layout="4 pr:3">
            <span data-bk-layout="p:tb" class="bg-primary align-c">pr:3</span>
        </li>
      </ul>
    </section>
  </div>

  <div class="w-100 bg-white--tint  pad" id="alignment">
    <section class="site-container">
      <h3 data-bk-layout="p:trl" class="font-l">Vertical Align Middle</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>In <code>data-bk-layout</code> simply specify <code>middle</code> to aling items along the middle.</p>
      </div>

      <div data-bk-layout>
        <ul data-bk-layout="p:0  middle" class="bg-grey--lighter">
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br><br><br></span>
          </li>
        </ul>
      </div>

      <h3 data-bk-layout="p:trl" class="font-l">Vertical Align Bottom</h3>

      <div data-bk-layout="l:7" class="rte">
        <p>In <code>data-bk-layout</code> specify <code>bottom</code> to aling items to the bottom.</p>
      </div>

      <div data-bk-layout>
        <ul data-bk-layout="p:0  bottom" class="bg-grey--lighter">
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br><br><br></span>
          </li>
        </ul>
      </div>

      <h3 data-bk-layout="p:trl" class="font-l">Align Right + Vertical Align Bottom</h3>

      <div data-bk-layout="l:7" class="rte">
        <p>In <code>data-bk-layout</code> specify <code>right bottom</code> to aling items to the right and bottom.</p>
      </div>

      <div data-bk-layout>
        <ul data-bk-layout="p:0 right bottom" class="bg-grey--lighter">
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br><br><br></span>
          </li>
        </ul>
      </div>

      <h3 data-bk-layout="p:trl" class="font-l">Align Center + Vertical Align Middle</h3>

      <div data-bk-layout="l:7" class="rte">
        <p>In <code>data-bk-layout</code> specify <code>middle center</code> to aling items this way.</p>
      </div>

      <div data-bk-layout>
        <ul data-bk-layout="p:0 middle  center" class="bg-grey--lighter">
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br></span>
          </li>
          <li data-bk-layout="2">
            <span data-bk-layout class="bg-primary align-c"><br><br><br><br><br><br></span>
          </li>
        </ul>
      </div>

      <div data-bk-layout class="margin-b">
        <p class="alert alert--simple">
          And so on, you can use <code>top</code>&nbsp;<code>middle</code>&nbsp;<code>center</code>&nbsp;<code>bottom</code>&nbsp;<code>right</code>&nbsp;<code>left</code> across all the breakpoints.
        </p>
      </div>

      <h3 data-bk-layout="p:trl" class="font-l">Single Item Alignment</h3>

      <div data-bk-layout="l:7" class="rte">
        <p>To position one particular item to the bottom specify <code>self-bottom</code>in <code>data-bk-layout</code>. <strong>Currently this only works for bottom alignment</strong>.</p>
      </div>

      <div data-bk-layout>
        <ul class="bg-grey--lighter">
          <li data-bk-layout="3">
            <span data-bk-layout class="bg-grey align-c">Normal<br><br><br><br><br><br><br><br></span>
          </li>
          <li data-bk-layout="3  self-bottom">
            <span data-bk-layout class="bg-primary color-white align-c">Bottom</span>
          </li>
          <li data-bk-layout="3">
            <span data-bk-layout class="bg-grey align-c">Normal<br><br><br><br><br><br><br><br></span>
          </li>
        </ul>
      </div>

      <div data-bk-layout="l:7" class="rte">
        <p>Single item alignment will override any other alignment settings. Below the container specifies a <code>middle center</code> alignment but the second item is forced to the bottom.</p>
      </div>

      <div data-bk-layout>
        <ul class="bg-grey--lighter" data-bk-layout="p:0 middle center">
          <li data-bk-layout="3">
            <span data-bk-layout class="bg-grey align-c">Normal<br><br><br><br><br><br><br><br></span>
          </li>
          <li data-bk-layout="3  self-bottom">
            <span data-bk-layout class="bg-primary color-white align-c">Bottom</span>
          </li>
          <li data-bk-layout="3">
            <span data-bk-layout class="bg-grey align-c">Normal</span>
          </li>
        </ul>
      </div>

      <div data-bk-layout class="margin-b">
        <p class="alert alert--simple">
          As mentioned above single item alignment is restricted to bottom alignment at the moment. This is purely because it rarely gets used but other alignments can be added if necessary.
        </p>
      </div>
    </section>
  </div>

  <div class="w-100 bg-white pad" id="padding">
    <section class="site-container">

      <h3 data-bk-layout="p:trl" class="font-l">Padding</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>Coloured edges indicate where padding has been applied. Unlike the spacer or margin classes the available values for grid padding provide a full range of options around every edge.</p>
      </div>

      <ul data-bk-layout="middle  p:0">
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:t" class="bg-primary" src="/imgs/placeholders/square.png?text=p:t" alt="Top">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:tr" class="bg-primary" src="/imgs/placeholders/square.png?text=p:tr" alt="Top Right">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:tb" class="bg-primary" src="/imgs/placeholders/square.png?text=p:tb" alt="Top Bottom">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:tl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:tl" alt="Top Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:b" class="bg-primary" src="/imgs/placeholders/square.png?text=p:b" alt="Bottom">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:bl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:bl" alt="Bottom Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:rl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:rl" alt="Right Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:rb" class="bg-primary" src="/imgs/placeholders/square.png?text=p:rb" alt="Right Bottom">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:r" class="bg-primary" src="/imgs/placeholders/square.png?text=p:r" alt="Right">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:l" class="bg-primary" src="/imgs/placeholders/square.png?text=p:l" alt="Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:trb" class="bg-primary" src="/imgs/placeholders/square.png?text=p:trb" alt="Top Right Bottom">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:rbl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:rbl" alt="Right Bottom Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:tbl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:tbl" alt="Top Bottom Left">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:trl" class="bg-primary" src="/imgs/placeholders/square.png?text=p:trl" alt="Top Right Left">
        </li>
      </ul>
    </section>
  </div>

  <div class="w-100 bg-white--tint  pad" id="padding-size">
    <section class="site-container">
      <h3 data-bk-layout="p:trl" class="font-l">Padding Sizes</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>There are three configurable sizes of padding, the default value and small and large values. These are half and double the default padding value.</p>

        <p>Unlike the spacer class there is no “larger” option.</p>
      </div>

      <ul data-bk-layout="middle  p:0">
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:sm" class="bg-primary" src="/imgs/placeholders/square.png?text=p:sm" alt="Small Padding">
        </li>
        <li data-bk-layout="s:4 l:3">
          <img data-bk-layout="p:lg" class="bg-primary" src="/imgs/placeholders/square.png?text=p:lg" alt="Large Padding">
        </li>
      </ul>
    </section>
  </div>

  <div class="w-100 bg-secondary--lighter pad" id="widths">
    <section class="site-container">

      <h3 data-bk-layout="p:trl" class="font-l">Simple Widths</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>This simple width class offers pre-defined width values for use without concern for the grid. Sticking with <code>data-bk-layout</code> is preferred to maintain consistency but sometimes simply setting 100% or 20% width is required. In fact, a 12 column grid (the default) can’t be broken into certain values (20% is 2.4 which would make a useless column width). Really the most useful classes here would be 20% and 100%.</p>

        <p>This class is also fully responsive with options across all defined breakpoints.</p>
      </div>

      <ul data-bk-layout class="color-white">
        {% for width in [15, 20, 25, 33, 50, 66, 75, 80, 85, 100] %}
          <li data-bk-layout="p:tb">
            <span data-bk-layout class="bg-secondary--dark w-{{ width }}">
              {{ width }}% width
            </span>
          </li>
        {% endfor %}

        <li data-bk-layout="p:tb">
          <span data-bk-layout class="bg-secondary--dark w-auto">
            Auto width
          </span>
          <span data-bk-layout class="bg-secondary--dark w-auto margin-l">
            will fit to the
          </span>
          <span data-bk-layout class="bg-secondary--dark w-auto margin-l">
            content
          </span>
        </li>
      </ul>

      <div data-bk-layout="p:trl" class="pad-t">
        <h3 class="font-l margin-b">Responsive Example</h3>

        <p>Width classes are available from each breakpoint, but to save on file size there is no “up to” option.</p>
      </div>

      <ul class="color-white font-xs">
        <li data-bk-layout class="w-s-50 w-m-33 w-l-20">
          <ul data-bk-layout class="bg-secondary--dark">
            <li>w-l-20</li>
            <li>w-m-33</li>
            <li>w-s-50</li>
          </ul>
        </li>
        <li data-bk-layout class="w-s-50 w-m-33 w-l-20">
          <ul data-bk-layout class="bg-secondary--dark">
            <li>w-l-20</li>
            <li>w-m-33</li>
            <li>w-s-50</li>
          </ul>
        </li>
        <li data-bk-layout class="w-s-50 w-m-33 w-l-20">
          <ul data-bk-layout class="bg-secondary--dark">
            <li>w-l-20</li>
            <li>w-m-33</li>
            <li>w-s-50</li>
          </ul>
        </li>
        <li data-bk-layout class="w-100 w-s-50 w-l-20">
          <ul data-bk-layout class="bg-secondary--dark">
            <li>w-l-20</li>
            <li>s-s-50</li>
            <li>w-100</li>
          </ul>
        </li>
        <li data-bk-layout class="w-100 w-m-50 w-l-20">
          <ul data-bk-layout class="bg-secondary--dark">
            <li>w-l-20</li>
            <li>m-m-50</li>
            <li>w-100</li>
          </ul>
        </li>
      </ul>

    </section>
  </div>

  <div class="w-100 bg-white pad" id="padding-size" data-bk-links="primary underline-hover">
    <section class="site-container">
      <h3 data-bk-layout="p:trl" class="font-l">Site Container</h3>

      <div data-bk-layout="s:9 m:8 l:7" class="rte">
        <p>The site container class makes sure the website does not expand beyond the defined maximum width while allowing you to break out if required.</p>

        <p><code>class="<strong>site-container</strong></code> is the primary class and limits the site content to the maximum width on large screens. But when a screen is less than the maxiumum width the website will never be larger than a predefined percentage of the screen width, 96% by default.</p>

        <p>To override the 96% default limit and fit the container to 100% of the screen width, simply use the <code>class="<strong>w-100</strong>"</code> (this is explained in the previous <a href="#widths" class="arrow-up">Simple Widths section</a>).</p>
      </div>
    </section>

    <div class="site-container bg-grey--light ba b-grey margin-tb align-c">
      <p data-bk-layout><code>class="<strong>site-container</strong>"</code> I will fit to the maxiumum width or never larger than 96% of the screen width if less than the max width.</p>
    </div>

    <div class="site-container w-100 bg-grey--light ba b-grey align-c">
      <p data-bk-layout><code>class="site-container <strong>w-100</strong>"</code> I will fit to the maxiumum width and 100% of the screen width if less than the maximum width.</p>
    </div>
  </div>

{% endblock %}